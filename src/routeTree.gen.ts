/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const ContactsLazyImport = createFileRoute('/contacts')()
const IndexLazyImport = createFileRoute('/')()
const SettingsGeneralLazyImport = createFileRoute('/settings/general')()
const NotesUuidLazyImport = createFileRoute('/notes/$uuid')()
const DriveSplatLazyImport = createFileRoute('/drive/$')()
const ChatsUuidLazyImport = createFileRoute('/chats/$uuid')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ContactsLazyRoute = ContactsLazyImport.update({
  path: '/contacts',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contacts.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SettingsGeneralLazyRoute = SettingsGeneralLazyImport.update({
  path: '/settings/general',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/settings.general.lazy').then((d) => d.Route),
)

const NotesUuidLazyRoute = NotesUuidLazyImport.update({
  path: '/notes/$uuid',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notes.$uuid.lazy').then((d) => d.Route))

const DriveSplatLazyRoute = DriveSplatLazyImport.update({
  path: '/drive/$',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/drive.$.lazy').then((d) => d.Route))

const ChatsUuidLazyRoute = ChatsUuidLazyImport.update({
  path: '/chats/$uuid',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/chats.$uuid.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/contacts': {
      preLoaderRoute: typeof ContactsLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/chats/$uuid': {
      preLoaderRoute: typeof ChatsUuidLazyImport
      parentRoute: typeof rootRoute
    }
    '/drive/$': {
      preLoaderRoute: typeof DriveSplatLazyImport
      parentRoute: typeof rootRoute
    }
    '/notes/$uuid': {
      preLoaderRoute: typeof NotesUuidLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/general': {
      preLoaderRoute: typeof SettingsGeneralLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ContactsLazyRoute,
  LoginLazyRoute,
  ChatsUuidLazyRoute,
  DriveSplatLazyRoute,
  NotesUuidLazyRoute,
  SettingsGeneralLazyRoute,
])

/* prettier-ignore-end */
